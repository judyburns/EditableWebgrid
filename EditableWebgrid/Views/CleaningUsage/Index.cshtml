@model List<EditableWebgrid.Models.CleaningUsageModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">

    .edit-mode {
    }

    .edit-usg {
    }

        .edit-usg display-mode {
        }

    .add-usg edit-mode {
    }

    .display-mode {
    }

    .remove-usg {
    }

    .webgrid-table {
        font-family: Arial,Helvetica,sans-serif;
        font-size: 14px;
        font-weight: normal;
        width: 900px;
        display: table;
        border-collapse: collapse;
        border: solid 1px #C5C5C5;
        background-color: white;
    }

        .webgrid-table td, th {
            border: 1px solid #C5C5C5;
            padding: 3px 7px 2px;
        }

    .webgrid-header, .webgrid-header a {
        background-color: #B6391E;
        color: white;
        text-align: left;
        text-decoration: none;
    }

    .webgrid-footer {
    }

    .webgrid-row-style {
        padding: 3px 7px 2px;
    }

    .webgrid-alternating-row {
        background-color: #F5F5F5;
        padding: 3px 7px 2px;
    }

    .col1Width {
        width: 50px;
    }

    .col2Width {
        width: 200px;
    }

    .col3Width {
        width: 200px;
    }
</style>

<script type="text/javascript">
    $(function () {

        // edit mode hide
        $('.edit-mode').hide();

        //edit or cancel button click
        $('.edit-item, .cancel-item').on('click', function () {
            var tr = $(this).parents('tr:first');
            tr.find('.edit-mode, .display-mode').toggle();
            // reset user input to 0
            //tr.find('#UserInput').val("0");
        });

        //increase quantity button click
        $('.increase-qty').on('click', function () {
            var tr = $(this).parents('tr:first');
            var ItemID = tr.find("#ItemID").val();
            var Desc = tr.find("#Desc").val();
            var Qty = tr.find("#Qty").val();
            //var UserQty = tr.find("#UserQty").val();
            tr.find("#lblDesc").text(Desc);
            tr.find("#lblQty").text(Qty);
            tr.find('.edit-mode, .display-mode').toggle();
            // reset user input to 0
            //tr.find('#UserInput').val("0");
            var CleaningUsageModel =
                {
                    "ID": ItemID,
                    "Description": Desc,
                    "Qty Modified": Qty
                    //"User Qty": UserQty
                    //"User": User,
                    //"Update": Date
                };
            $.ajax({
                url: '/CleaningUsage/IncreaseQty/',
                data: JSON.stringify(CleaningUsageModel),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    alert(data);
                }
            });

        });

        // decrease quantity button click
        $('.decrease-qty').on('click', function () {
            var tr = $(this).parents('tr:first');
            var ItemID = tr.find("#ItemID").val();
            var Desc = tr.find("#Desc").val();
            var Qty = tr.find("#Qty").val();
            //var UserQty = tr.find("#UserQty").val();
            tr.find("#lblDesc").text(Desc);
            tr.find("#lblQty").text(Qty);
            tr.find('.edit-mode, .display-mode').toggle();
            // reset user input to 0
            //tr.find('#UserInput').val("0");
            var CleaningUsageModel =
                {
                    "ID": ItemID,
                    "Description": Desc,
                    "Qty Modified": Qty
                    //"User Qty": UserQty
                    //"User": User,
                    //"Update": Date
                };
            $.ajax({
                url: '/CleaningUsage/DecreaseQty/',
                data: JSON.stringify(CleaningUsageModel),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    alert(data);
                }
            });

        });
    })
</script>

<h2>Usage</h2>

@{
    var grid = new WebGrid(Model);
}

<div id="gridContent" style=" padding:20px; ">
    @grid.GetHtml(
                                tableStyle: "webgrid-table",
                                headerStyle: "webgrid-header",
                                footerStyle: "webgrid-footer",
                                alternatingRowStyle: "webgrid-alternating-row",
                                selectedRowStyle: "webgrid-selected-row",
                                rowStyle: "webgrid-row-style",
                                mode: WebGridPagerModes.All,
                 columns:
                                grid.Columns(
                                @*grid.Column("ID", format: @<text>  <span class="display-mode">@item.ID </span> <label id="ItemID" class="edit-mode">@item.ID</label> </text>, style: "col2Width"),*@
                                grid.Column("Description", "Description", format: @<text>
                                    <span> <label id="lblDesc">@item.Description</label></span>
                                </text>, style: "col2Width"),
                                                        @*grid.Column("Qty", "Qty Modified", format: @<text>
                                                                <span> <label id="lblQty">@item.Qty</label> </span>
                                                            </text>, style: "col2Width"),*@
                                                        grid.Column("Qty", "Qty (Modified)", format: @<text>
                                                            <span class="display-mode">
                                                                <label id="lblQty">@item.Qty</label>
                                                            </span>
                                                            <input type="text" id="Qty" value="@item.Qty" class="edit-mode" />
                                                        </text>, style: "col2Width"),
                                                                               grid.Column("Action", format: @<text>
                                                                                @*<input type="text" id="UserInput" class="edit-mode" value="0" size="3" />*@
                                                                                <button class="edit-item display-mode">Edit</button>
                                                                                <button class="cancel-item edit-mode">Cancel</button>
                                                                                <button class="increase-qty edit-mode">(+) Qty</button>
                                                                                <button class="decrease-qty edit-mode">(-) Qty</button>
                                                                            </text>, style: "col3Width", canSort: false)
                                                                                            ))
</div>